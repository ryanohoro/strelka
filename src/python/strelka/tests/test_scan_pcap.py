from pathlib import Path
from unittest import TestCase, mock

from pytest_unordered import unordered

from strelka.scanners.scan_pcap import ScanPcap as ScanUnderTest
from strelka.tests import run_test_scan


def test_scan_pcap(mocker):
    test_scan_event = {
        "elapsed": mock.ANY,
        "flags": ["zeek_conn_limit_reached"],
        "total": {"connections": 3, "files": 3, "extracted": 3},
        "files": [
            {
                "analyzers": unordered(["PE", "EXTRACT"]),
                "depth": 0,
                "duration": 0.00018906593322753906,
                "extracted": "extract-1673576655.41892-HTTP-FOxTJwn9u5H1hBXn1",
                "extracted_cutoff": False,
                "fuid": "FOxTJwn9u5H1hBXn1",
                "id.orig_h": "192.168.174.1",
                "id.orig_p": 13147,
                "id.resp_h": "192.168.174.131",
                "id.resp_p": 8080,
                "is_orig": False,
                "local_orig": True,
                "mime_type": "application/x-dosexec",
                "missing_bytes": 0,
                "overflow_bytes": 0,
                "seen_bytes": 4096,
                "source": "HTTP",
                "timedout": False,
                "total_bytes": 4096,
                "ts": 1673576655.41892,
                "uid": mock.ANY,
            },
            {
                "analyzers": unordered(["EXTRACT"]),
                "depth": 0,
                "duration": 0.007551908493041992,
                "extracted": "extract-1673576666.163778-HTTP-FxYAi61ktBsEM4hpNd",
                "extracted_cutoff": False,
                "fuid": "FxYAi61ktBsEM4hpNd",
                "id.orig_h": "192.168.174.1",
                "id.orig_p": 13162,
                "id.resp_h": "192.168.174.131",
                "id.resp_p": 8080,
                "is_orig": False,
                "local_orig": True,
                "mime_type": "image/jpeg",
                "missing_bytes": 0,
                "overflow_bytes": 0,
                "seen_bytes": 308566,
                "source": "HTTP",
                "timedout": False,
                "total_bytes": 308566,
                "ts": 1673576666.163778,
                "uid": mock.ANY,
            },
            {
                "analyzers": unordered(["EXTRACT"]),
                "depth": 0,
                "duration": 0.0,
                "extracted": "extract-1673576677.801391-HTTP-FoNGFk1uRR9pVo9XKi",
                "extracted_cutoff": False,
                "fuid": "FoNGFk1uRR9pVo9XKi",
                "id.orig_h": "192.168.174.1",
                "id.orig_p": 13176,
                "id.resp_h": "192.168.174.131",
                "id.resp_p": 8080,
                "is_orig": False,
                "local_orig": True,
                "mime_type": "application/xml",
                "missing_bytes": 0,
                "overflow_bytes": 0,
                "seen_bytes": 620,
                "source": "HTTP",
                "timedout": False,
                "total_bytes": 620,
                "ts": 1673576677.801391,
                "uid": mock.ANY,
            },
        ],
        "suricata": {
            "alerts": [
                {
                    "alert": {
                        "action": "allowed",
                        "category": "",
                        "gid": 1,
                        "rev": 1,
                        "severity": 3,
                        "signature": "HTTP Request Detected",
                        "signature_id": 1000001,
                    },
                    "dest_ip": "192.168.174.131",
                    "dest_port": 8080,
                    "event_type": "alert",
                    "flow": {
                        "bytes_toclient": 66,
                        "bytes_toserver": 656,
                        "pkts_toclient": 1,
                        "pkts_toserver": 3,
                        "start": "2023-01-13T02:24:15.414023+0000",
                    },
                    "flow_id": mock.ANY,
                    "pcap_cnt": 4,
                    "pcap_filename": mock.ANY,
                    "proto": "6",
                    "src_ip": "192.168.174.1",
                    "src_port": 13147,
                    "timestamp": "2023-01-13T02:24:15.414361+0000",
                },
                {
                    "alert": {
                        "action": "allowed",
                        "category": "",
                        "gid": 1,
                        "rev": 1,
                        "severity": 3,
                        "signature": "HTTP Request Detected",
                        "signature_id": 1000001,
                    },
                    "app_proto": "http",
                    "dest_ip": "192.168.174.131",
                    "dest_port": 8080,
                    "event_type": "alert",
                    "flow": {
                        "bytes_toclient": 1899,
                        "bytes_toserver": 710,
                        "pkts_toclient": 4,
                        "pkts_toserver": 4,
                        "start": "2023-01-13T02:24:15.414023+0000",
                    },
                    "flow_id": mock.ANY,
                    "http": {
                        "hostname": "192.168.174.131",
                        "http_content_type": "application/x-msdos-program",
                        "http_method": "GET",
                        "http_port": 8080,
                        "http_refer": "http://192.168.174.131:8080/",
                        "http_user_agent": "Mozilla/5.0 (Windows NT "
                        "10.0; Win64; x64) "
                        "AppleWebKit/537.36 "
                        "(KHTML, like Gecko) "
                        "Chrome/108.0.0.0 "
                        "Safari/537.36",
                        "length": 1460,
                        "protocol": "HTTP/1.1",
                        "status": 200,
                        "url": "/test.exe",
                    },
                    "pcap_cnt": 8,
                    "pcap_filename": mock.ANY,
                    "proto": "6",
                    "src_ip": "192.168.174.1",
                    "src_port": 13147,
                    "timestamp": "2023-01-13T02:24:15.418972+0000",
                },
                {
                    "alert": {
                        "action": "allowed",
                        "category": "",
                        "gid": 1,
                        "rev": 1,
                        "severity": 3,
                        "signature": "HTTP Request Detected",
                        "signature_id": 1000001,
                    },
                    "dest_ip": "192.168.174.131",
                    "dest_port": 8080,
                    "event_type": "alert",
                    "flow": {
                        "bytes_toclient": 66,
                        "bytes_toserver": 656,
                        "pkts_toclient": 1,
                        "pkts_toserver": 3,
                        "start": "2023-01-13T02:24:26.158387+0000",
                    },
                    "flow_id": mock.ANY,
                    "pcap_cnt": 19,
                    "pcap_filename": mock.ANY,
                    "proto": "6",
                    "src_ip": "192.168.174.1",
                    "src_port": 13162,
                    "timestamp": "2023-01-13T02:24:26.158751+0000",
                },
                {
                    "alert": {
                        "action": "allowed",
                        "category": "",
                        "gid": 1,
                        "rev": 1,
                        "severity": 3,
                        "signature": "HTTP Request Detected",
                        "signature_id": 1000001,
                    },
                    "app_proto": "http",
                    "dest_ip": "192.168.174.131",
                    "dest_port": 8080,
                    "event_type": "alert",
                    "flow": {
                        "bytes_toclient": 1884,
                        "bytes_toserver": 710,
                        "pkts_toclient": 4,
                        "pkts_toserver": 4,
                        "start": "2023-01-13T02:24:26.158387+0000",
                    },
                    "flow_id": mock.ANY,
                    "http": {
                        "hostname": "192.168.174.131",
                        "http_content_type": "image/jpeg",
                        "http_method": "GET",
                        "http_port": 8080,
                        "http_refer": "http://192.168.174.131:8080/",
                        "http_user_agent": "Mozilla/5.0 (Windows NT "
                        "10.0; Win64; x64) "
                        "AppleWebKit/537.36 "
                        "(KHTML, like Gecko) "
                        "Chrome/108.0.0.0 "
                        "Safari/537.36",
                        "length": 1460,
                        "protocol": "HTTP/1.1",
                        "status": 200,
                        "url": "/test.jpg",
                    },
                    "pcap_cnt": 23,
                    "pcap_filename": mock.ANY,
                    "proto": "6",
                    "src_ip": "192.168.174.1",
                    "src_port": 13162,
                    "timestamp": "2023-01-13T02:24:26.163830+0000",
                },
                {
                    "alert": {
                        "action": "allowed",
                        "category": "",
                        "gid": 1,
                        "rev": 1,
                        "severity": 3,
                        "signature": "HTTP Request Detected",
                        "signature_id": 1000001,
                    },
                    "dest_ip": "192.168.174.131",
                    "dest_port": 8080,
                    "event_type": "alert",
                    "flow": {
                        "bytes_toclient": 66,
                        "bytes_toserver": 656,
                        "pkts_toclient": 1,
                        "pkts_toserver": 3,
                        "start": "2023-01-13T02:24:37.797119+0000",
                    },
                    "flow_id": mock.ANY,
                    "pcap_cnt": 346,
                    "pcap_filename": mock.ANY,
                    "proto": "6",
                    "src_ip": "192.168.174.1",
                    "src_port": 13176,
                    "timestamp": "2023-01-13T02:24:37.797451+0000",
                },
                {
                    "alert": {
                        "action": "allowed",
                        "category": "",
                        "gid": 1,
                        "rev": 1,
                        "severity": 3,
                        "signature": "HTTP Request Detected",
                        "signature_id": 1000001,
                    },
                    "app_proto": "http",
                    "dest_ip": "192.168.174.131",
                    "dest_port": 8080,
                    "event_type": "alert",
                    "flow": {
                        "bytes_toclient": 1046,
                        "bytes_toserver": 710,
                        "pkts_toclient": 4,
                        "pkts_toserver": 4,
                        "start": "2023-01-13T02:24:37.797119+0000",
                    },
                    "flow_id": mock.ANY,
                    "http": {
                        "hostname": "192.168.174.131",
                        "http_content_type": "application/xml",
                        "http_method": "GET",
                        "http_port": 8080,
                        "http_refer": "http://192.168.174.131:8080/",
                        "http_user_agent": "Mozilla/5.0 (Windows NT "
                        "10.0; Win64; x64) "
                        "AppleWebKit/537.36 "
                        "(KHTML, like Gecko) "
                        "Chrome/108.0.0.0 "
                        "Safari/537.36",
                        "length": 620,
                        "protocol": "HTTP/1.1",
                        "status": 200,
                        "url": "/test.xml",
                    },
                    "pcap_cnt": 350,
                    "pcap_filename": mock.ANY,
                    "proto": "6",
                    "src_ip": "192.168.174.1",
                    "src_port": 13176,
                    "timestamp": "2023-01-13T02:24:37.801425+0000",
                },
            ]
        },
        "connections": [
            {
                "bytes_orig": 482,
                "bytes_resp": 4301,
                "conn_state": "SF",
                "dest_ip": "192.168.174.131",
                "dest_port": 8080,
                "duration": 0.005362987518310547,
                "protocol": "tcp",
                "protocol_details": {
                    "http": {
                        "host": "192.168.174.131:8080",
                        "method": "GET",
                        "status_code": 200,
                        "uri": "/test.exe",
                        "user_agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36",
                    }
                },
                "service": "http",
                "source_ip": "192.168.174.1",
                "source_port": 13147,
                "uid": mock.ANY,
            }
        ],
    }

    scanner_event = run_test_scan(
        mocker=mocker,
        scan_class=ScanUnderTest,
        fixture_path=Path(__file__).parent / "fixtures/test.pcap",
        options={
            "scanner_timeout": 20,
            "zeek_conn": True,
            "zeek_conn_limit": 1,
            "zeek_proto": True,
            "suricata_rules": Path(Path(__file__).parent / "helpers/suricata.rules"),
            "suricata_config": Path(Path(__file__).parent / "helpers/suricata.yaml"),
            "suricata_dedupe": False,
        },
    )

    TestCase.maxDiff = None
    TestCase().assertDictEqual(test_scan_event, scanner_event)


def test_scan_pcap_ng(mocker):
    """
    Pass: Sample event matches output of scanner.
    Failure: Unable to load file or sample event fails to match.
    """

    test_scan_event = {
        "elapsed": mock.ANY,
        "flags": [],
        "total": {"files": 3, "extracted": 3},
        "files": [
            {
                "analyzers": unordered(["PE", "EXTRACT"]),
                "depth": 0,
                "duration": mock.ANY,
                "extracted": mock.ANY,
                "extracted_cutoff": False,
                "fuid": "FOxTJwn9u5H1hBXn1",
                "id.orig_h": "192.168.174.1",
                "id.orig_p": 13147,
                "id.resp_h": "192.168.174.131",
                "id.resp_p": 8080,
                "is_orig": False,
                "local_orig": True,
                "mime_type": "application/x-dosexec",
                "missing_bytes": 0,
                "overflow_bytes": 0,
                "seen_bytes": 4096,
                "source": "HTTP",
                "timedout": False,
                "total_bytes": 4096,
                "ts": 1673576655.41892,
                "uid": mock.ANY,
            },
            {
                "analyzers": unordered(["EXTRACT"]),
                "depth": 0,
                "duration": mock.ANY,
                "extracted": mock.ANY,
                "extracted_cutoff": False,
                "fuid": "FxYAi61ktBsEM4hpNd",
                "id.orig_h": "192.168.174.1",
                "id.orig_p": 13162,
                "id.resp_h": "192.168.174.131",
                "id.resp_p": 8080,
                "is_orig": False,
                "local_orig": True,
                "mime_type": "image/jpeg",
                "missing_bytes": 0,
                "overflow_bytes": 0,
                "seen_bytes": 308566,
                "source": "HTTP",
                "timedout": False,
                "total_bytes": 308566,
                "ts": 1673576666.163778,
                "uid": mock.ANY,
            },
            {
                "analyzers": unordered(["EXTRACT"]),
                "depth": 0,
                "duration": mock.ANY,
                "extracted": mock.ANY,
                "extracted_cutoff": False,
                "fuid": "FoNGFk1uRR9pVo9XKi",
                "id.orig_h": "192.168.174.1",
                "id.orig_p": 13176,
                "id.resp_h": "192.168.174.131",
                "id.resp_p": 8080,
                "is_orig": False,
                "local_orig": True,
                "mime_type": "application/xml",
                "missing_bytes": 0,
                "overflow_bytes": 0,
                "seen_bytes": 620,
                "source": "HTTP",
                "timedout": False,
                "total_bytes": 620,
                "ts": 1673576677.801391,
                "uid": mock.ANY,
            },
        ],
    }

    scanner_event = run_test_scan(
        mocker=mocker,
        scan_class=ScanUnderTest,
        fixture_path=Path(__file__).parent / "fixtures/test.pcapng",
        options={"scanner_timeout": 20, "zeek_conn": False, "zeek_proto": False},
    )

    TestCase.maxDiff = None
    TestCase().assertDictEqual(test_scan_event, scanner_event)
